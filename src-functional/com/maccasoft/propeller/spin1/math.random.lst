0000     00B71B00      Frequency 12000000 Hz
0004     00            RCFast
0005     F7            Check Sum
0006     0010          Base of Program
0008     0078          Base of Variables
000A     0084          Base of Stack
000C     0060          Initial Program Counter
000E     0088          Initial Stack Pointer
                       File "math.random.spin"
0010     0068 0004     Link to Next Object
0014     0050 0000     Link to PUB Start
0018     0059 0000     Link to PUB Random
001C     0064 0000     Link to PUB RandomAddress
0020 000               DAT
0020 000                                       org
0020 000 58FFF00F      entry                   movi        ctra,#%00001_111                    ' set ctra to internal pll mode, select x16 tap
0024 001 58FFF420                              movi        frqa,#$020                          ' set frqa to system clock frequency / 16
0028 002 58FFFC40                              movi        vcfg,#$040                          ' set vcfg to discrete output, but without pins
002C 003 A0FFFE46                              mov         vscl,#70                            ' set vscl to 70 pixel clocks per waitvid
0030 004 FC3C0000      :twobits                waitvid     0,0                                 ' wait for next 70-pixel mark ± jitter time
0034 005 617FF817                              test        phsa,#%10111            wc          ' pseudo-randomly sequence phase to induce jitter
0038 006 30FFF801                              rcr         phsa,#1                             ' (c holds random bit #1)
003C 007 80BFF9F1                              add         phsa,cnt                            ' mix PLL jitter back into phase
0040 008 367FE001                              rcl         par,#1                  wz, nr      ' transfer c into nz (par shadow register = 0)
0044 009 083C21F0                              wrlong      _random_value,par                   ' write random value back to spin variable
0048 00A FC3C0000                              waitvid     0,0                                 ' wait for next 70-pixel mark ± jitter time
004C 00B 617FF817                              test        phsa,#%10111            wc          ' pseudo-randomly sequence phase to induce jitter
0050 00C 30FFF801                              rcr         phsa,#1                             ' (c holds random bit #2)
0054 00D 80BFF9F1                              add         phsa,cnt                            ' mix PLL jitter back into phase
0058 00E 34E42001              if_z_eq_c       rcl         _random_value,#1                    ' only allow different bits (removes bias)
005C 00F 5C7C0004                              jmp         #:twobits                           ' get next two bits
0060 010               _random_value           res         1
0060                   PUB Start
0060                       return cognew(@entry, @random_value) + 1
0060     34            ; Push_Neg1
0061     C7 10         ; Reference_ObjectMem_Long, $0010
0063     43            ; Reference_VariableMem_Long_0
0064     28            ; Coginit_Returns
0065     36            ; Push_1
0066     EC            ; Add
0067     33            ; Pop_Return
0068     32            ; Return
0069                   PUB Random
0069                       repeat while not random_value
0069     40            ; Push_VariableMem_Long_0
006A     FF            ; Logical_Not
006B     0A 02         ; Jump_If_False, $0002
006D     04 7A         ; Branch, $FFFA
006F                       result := random_value
006F     40            ; Push_VariableMem_Long_0
0070     61            ; Pop_LocalMem_Long_0
0071                       random_value := 0
0071     35            ; Push_0
0072     41            ; Pop_VariableMem_Long_0
0073     32            ; Return
0074                   PUB RandomAddress
0074                       return @random_value
0074     43            ; Reference_VariableMem_Long_0
0075     33            ; Pop_Return
0076     32            ; Return
0077     00            ; Frame_Call_Return
                       Variables for TOP (math.random.spin)
0078     0000          long RANDOM_VALUE
007C                   Reserved 8 bytes.
0084                   Base of stack.
0094                   Top of stack.
