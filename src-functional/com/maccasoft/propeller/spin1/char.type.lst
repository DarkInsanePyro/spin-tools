0000     00B71B00      Frequency 12000000 Hz
0004     00            RCFast
0005     C4            Check Sum
0006     0010          Base of Program
0008     00B4          Base of Variables
000A     00BC          Base of Stack
000C     0034          Initial Program Counter
000E     00C4          Initial Stack Pointer
                       File "char.type.spin"
0010     00A4 0009     Link to Next Object
0014     0024 0000     Link to PUB IsAlphaNumeric(c)
0018     003A 0000     Link to PUB IsAlpha(c)
001C     004B 0000     Link to PUB IsDigit(c)
0020     0057 0000     Link to PUB IsLower(c)
0024     0063 0000     Link to PUB IsUpper(c)
0028     006F 0000     Link to PUB IsSpace(c)
002C     0082 0000     Link to PUB Upper(c)
0030     0092 0000     Link to PUB Lower(c)
0034                   PUB IsAlphaNumeric(c)
0034                       return lookdown(c: "0".."9", "a".."z", "A".."Z")
0034     36            ; Push_1
0035     38 38         ; Push_Byte_Lit, $38
0037     64            ; Push_LocalMem_Long_1
0038     38 30         ; Push_Byte_Lit, $30
003A     38 39         ; Push_Byte_Lit, $39
003C     13            ; Lookdownrange_Compare
003D     38 61         ; Push_Byte_Lit, $61
003F     38 7A         ; Push_Byte_Lit, $7A
0041     13            ; Lookdownrange_Compare
0042     38 41         ; Push_Byte_Lit, $41
0044     38 5A         ; Push_Byte_Lit, $5A
0046     13            ; Lookdownrange_Compare
0047     0F            ; Look_Abort
0048     33            ; Pop_Return
0049     32            ; Return
004A                   PUB IsAlpha(c)
004A                       return lookdown(c: "a".."z", "A".."Z")
004A     36            ; Push_1
004B     38 49         ; Push_Byte_Lit, $49
004D     64            ; Push_LocalMem_Long_1
004E     38 61         ; Push_Byte_Lit, $61
0050     38 7A         ; Push_Byte_Lit, $7A
0052     13            ; Lookdownrange_Compare
0053     38 41         ; Push_Byte_Lit, $41
0055     38 5A         ; Push_Byte_Lit, $5A
0057     13            ; Lookdownrange_Compare
0058     0F            ; Look_Abort
0059     33            ; Pop_Return
005A     32            ; Return
005B                   PUB IsDigit(c)
005B                       return lookdown(c: "0".."9")
005B     36            ; Push_1
005C     38 55         ; Push_Byte_Lit, $55
005E     64            ; Push_LocalMem_Long_1
005F     38 30         ; Push_Byte_Lit, $30
0061     38 39         ; Push_Byte_Lit, $39
0063     13            ; Lookdownrange_Compare
0064     0F            ; Look_Abort
0065     33            ; Pop_Return
0066     32            ; Return
0067                   PUB IsLower(c)
0067                       return lookdown(c: "a".."z")
0067     36            ; Push_1
0068     38 61         ; Push_Byte_Lit, $61
006A     64            ; Push_LocalMem_Long_1
006B     38 61         ; Push_Byte_Lit, $61
006D     38 7A         ; Push_Byte_Lit, $7A
006F     13            ; Lookdownrange_Compare
0070     0F            ; Look_Abort
0071     33            ; Pop_Return
0072     32            ; Return
0073                   PUB IsUpper(c)
0073                       return lookdown(c: "A".."Z")
0073     36            ; Push_1
0074     38 6D         ; Push_Byte_Lit, $6D
0076     64            ; Push_LocalMem_Long_1
0077     38 41         ; Push_Byte_Lit, $41
0079     38 5A         ; Push_Byte_Lit, $5A
007B     13            ; Lookdownrange_Compare
007C     0F            ; Look_Abort
007D     33            ; Pop_Return
007E     32            ; Return
007F                   PUB IsSpace(c)
007F                       return lookdown(c: " ", 9, 10, 13)
007F     36            ; Push_1
0080     38 80         ; Push_Byte_Lit, $80
0082     64            ; Push_LocalMem_Long_1
0083     37 04         ; Push_Packed_Lit, $00000020
0085     11            ; Lookdown_Compare
0086     38 09         ; Push_Byte_Lit, $09
0088     11            ; Lookdown_Compare
0089     38 0A         ; Push_Byte_Lit, $0A
008B     11            ; Lookdown_Compare
008C     38 0D         ; Push_Byte_Lit, $0D
008E     11            ; Lookdown_Compare
008F     0F            ; Look_Abort
0090     33            ; Pop_Return
0091     32            ; Return
0092                   PUB Upper(c)
0092                       if IsLower(c)
0092     00            ; Frame_Call_Return
0093     64            ; Push_LocalMem_Long_1
0094     05 04         ; Call, $04
0096     0A 07         ; Jump_If_False, $0007
0098                           return c - 32
0098     64            ; Push_LocalMem_Long_1
0099     37 04         ; Push_Packed_Lit, $00000020
009B     ED            ; Subtract
009C     33            ; Pop_Return
009D     04 02         ; Branch, $0002
009F                           return c
009F     64            ; Push_LocalMem_Long_1
00A0     33            ; Pop_Return
00A1     32            ; Return
00A2                   PUB Lower(c)
00A2                       if IsUpper(c)
00A2     00            ; Frame_Call_Return
00A3     64            ; Push_LocalMem_Long_1
00A4     05 05         ; Call, $05
00A6     0A 07         ; Jump_If_False, $0007
00A8                           return c + 32
00A8     64            ; Push_LocalMem_Long_1
00A9     37 04         ; Push_Packed_Lit, $00000020
00AB     EC            ; Add
00AC     33            ; Pop_Return
00AD     04 02         ; Branch, $0002
00AF                           return c
00AF     64            ; Push_LocalMem_Long_1
00B0     33            ; Pop_Return
00B1     32            ; Return
00B2     00            ; Frame_Call_Return
00B3     00            ; Frame_Call_Return
00B4                   Reserved 8 bytes.
00BC                   Base of stack.
00CC                   Top of stack.
