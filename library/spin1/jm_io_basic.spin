'' =================================================================================================''''   File....... jm_io_basic.spin''   Purpose.... Basic IO control''   Author..... Jon "JonnyMac" McPhalen''               Copyright (c) 2014-2022 Jon McPhalen''               -- see below for terms of use''   E-mail..... jon.mcphalen@gmail.com''   Started....''   Updated.... 04 JUN 2021'''' =================================================================================================con { fixed io pins }  RX_PGM   = 31  { I }                                          ' serial / programming  TX_PGM   = 30  { O }  SDA_EE   = 29  { I/O }                                        ' i2c / eeprom  SCL_EE   = 28  { I/O }pub null'' This is not a top-level objectpub start(pmask, dmask)'' Setup pins using pins and directions masks'' -- pmask is initial setting of pins (1 is on, 0 is off)'' -- dmask is initial setting of dirs register (1 is output, 0 is input)'' -- be mindfull of manipulating I2C and programming/debug pins  outa := pmask  dira := dmaskpub high(pin)'' Makes pin output and high  outa[pin] := 1  dira[pin] := 1pub pinhigh(pin)'' Makes pin output and high'' -- matches P2 (for one pin)  outa[pin] := 1  dira[pin] := 1pub low(pin)'' Makes pin output and low  outa[pin] := 0  dira[pin] := 1pub pinlow(pin)'' Makes pin output and low'' -- matches P2 (for one pin)  outa[pin] := 0  dira[pin] := 1pub toggle(pin)'' Toggles pin state'' -- pin is left as output  !outa[pin]  dira[pin] := 1pub pintoggle(pin)'' Toggles pin state'' -- pin is left as output'' -- matches P2 (for one pin)  !outa[pin]  dira[pin] := 1pub set(pin, value)'' Makes pin output and set to value.BIT0  outa[pin] := value                                            ' only uses bit0 of value  dira[pin] := 1pub pinwrite(pin, value)'' Makes pin output and set to value.BIT0'' -- matches P2 (for one pin)  outa[pin] := value                                            ' only uses bit0 of value  dira[pin] := 1pub input(pin)'' Makes pin input and returns current state  dira[pin] := 0  return ina[pin]pub pinfloat(pin)'' Makes pin input and returns current state'' -- matches P2 (for one pin)  dira[pin] := 0  return ina[pin]pub pinread(pin)'' Returns input bit of one pin'' -- matches P2 (for one pin)  return ina[pin]con { license }{{  Terms of Use: MIT License  Permission is hereby granted, free of charge, to any person obtaining a copy  of this software and associated documentation files (the "Software"), to deal  in the Software without restriction, including without limitation the rights  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell  copies of the Software, and to permit persons to whom the Software is  furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all  copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE  SOFTWARE.}}