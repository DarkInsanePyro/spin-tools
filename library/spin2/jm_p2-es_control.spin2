'' =================================================================================================
''
''   File....... jm_p2-es_control.spin2
''   Purpose.... Interface code for P2-ES Control (buttons & LEDs) PCB
''   Author..... Jon "JonnyMac" McPhalen
''               Copyright (c) 2020 Jon McPhalen
''               -- see below for terms of use
''   E-mail..... jon.mcphalen@gmail.com
''   Started....
''   Updated.... 28 JUN 2020
''
'' =================================================================================================

{{

   Note: The P2-ES Control PCB IO connections seem to have been selected to simplify layout;
         this object remaps the IO so that the channels used in various methods are assigned
         as shown below:

         [3]  [2]
         (*)CONTROL
         [1]  [0]

         This layout is for MSB..LSB in left-to-right, top-to-bottom order when the pcb is
         connected to the groups that begin with pin 32 or pin 40 (assuming P2-ES is aligned
         with pgm connection on the upper right).
         
}}


con { fixed io pins }

  RX1      = 63  { I }                                          ' programming / debug
  TX1      = 62  { O }                                           
                                                                 
  FS_CS    = 61  { O }                                          ' flash storage
  FS_SCLK  = 60  { O }                                           
  FS_MOSI  = 59  { O }                                           
  FS_MISO  = 58  { I }                                           


var

  byte  base                                                    ' first pin of group used

  word  ledpins                                                 ' pin groups
  word  btnpins
                                                            

pub null()

'' This is not a top-level object


pub start(basepin) 

'' Initialize IO for P2-ES Control PCB
'' -- basepin in is low pin of group used

  base := basepin                                               ' save base

  ledpins := base addpins 3                                     ' leds are base..base+3
  pinlow(ledpins)                                               ' set leds low (off)

  btnpins := base+4 addpins 3                                   ' buttons are base+4..base+7  
  wrpin(btnpins, P_LOW_15K)                                     ' select 15K pull-downs
  pinlow(btnpins)                                               ' activate pull-downs


pub wr_led(ch, state)

'' Write to specific LED
'' -- remapped for MSB..LSB as left-to-right, top-to-bottom

  if (state)                                                    ' promote non-0 to 1
    state := 1

  case ch                                                       ' re-map LEDs
    0 : pinwrite(base+0, state) 
    1 : pinwrite(base+1, state) 
    2 : pinwrite(base+3, state) 
    3 : pinwrite(base+2, state) 


pub wr_leds(bits) | ch

'' Write LEDs as a 4-bit group

  bits &= %1111

  if (bits == %0000)
    pinwrite(ledpins, %0000)

  elseif (bits == %1111)
    pinwrite(ledpins, %1111)

  else
    pinwrite(base+0, bits.[0])
    pinwrite(base+1, bits.[1])  
    pinwrite(base+3, bits.[2])  
    pinwrite(base+2, bits.[3])  


pub rd_btn(ch) : result

'' Return state of specified button
'' -- returns 1 if pressed, 0 if not pressed or invalid

  case ch
    0 : result := pinread(base+5)   
    1 : result := pinread(base+4)   
    2 : result := pinread(base+7)   
    3 : result := pinread(base+6)             


pub rd_btns() : result

'' Return state of control buttons as a 4-bit value

  result.[0] := pinread(base+5) 
  result.[1] := pinread(base+4) 
  result.[2] := pinread(base+7) 
  result.[3] := pinread(base+6) 


con { license }

{{
 
  Terms of Use: MIT License

  Permission is hereby granted, free of charge, to any person obtaining a copy of this
  software and associated documentation files (the "Software"), to deal in the Software
  without restriction, including without limitation the rights to use, copy, modify,
  merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
  permit persons to whom the Software is furnished to do so, subject to the following
  conditions:

  The above copyright notice and this permission notice shall be included in all copies
  or substantial portions of the Software.

  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
  INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
  PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF
  CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE
  OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

}} 